name: Auto Merge master → staging

on:
  schedule:
    - cron: "0 17 * * *"  # Runs every day at 17:00 UTC (3 AM UTC+10)
  workflow_dispatch:      # Manual trigger

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout staging branch
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Fetch master
        run: git fetch origin master:master

      - name: Debug: Show branch differences before merge
        run: |
          echo "--- Git log differences (staging vs master) ---"
          git log origin/master..HEAD --oneline --graph --decorate=short # Commits on staging not on master
          git log HEAD..origin/master --oneline --graph --decorate=short # Commits on master not on staging
          echo "--- End Debug ---"
          git status

      - name: Attempt merge
        id: attempt_merge
        run: |
          set -e
          echo "Attempting merge..."
          # Capture output of merge command to see if it says "Already up to date."
          MERGE_OUTPUT=$(git merge --no-commit --no-ff origin/master 2>&1) || MERGE_FAILED=true
          echo "$MERGE_OUTPUT" # Print merge output
          echo "Merge command exited with status: $?"

          if [ "$MERGE_FAILED" = "true" ]; then
            echo "conflict=1" >> $GITHUB_OUTPUT
            echo "Merge failed: $MERGE_OUTPUT" >&2
          else
            echo "Merge attempted successfully. Checking for changes..."
            if git diff --quiet; then
              echo "changed=false" >> $GITHUB_OUTPUT
              echo "No changes detected after merge (git diff --quiet returned 0)."
            else
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "Changes detected after merge (git diff --quiet returned non-0)."
            fi
          fi

      - name: Abort if merge conflict
        if: steps.attempt_merge.outputs.conflict == '1'
        run: |
          echo "❌ Merge conflict detected. Aborting merge."
          git merge --abort

      - name: Commit and push if changes exist and no conflict
        if: steps.attempt_merge.outputs.changed == 'true' && steps.attempt_merge.outputs.conflict != '1'
        run: |
          git commit -am "🤖 Auto-merged master into staging"
          git push origin staging
          echo "✅ Successfully committed and pushed auto-merge."

      - name: Notify via issue (with assignees)
        if: steps.attempt_merge.outputs.conflict == '1'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
                    const title = `❌ Merge conflict: master → staging on ${new Date().toISOString().slice(0, 10)}`
                    const body = `
                      Automatic nightly merge from \`master\` to \`staging\` failed due to a **merge conflict**.
                      Please resolve the conflict manually.
                      ---

                      **Workflow**: \`${{ github.workflow }}\`
                      **Run**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

                      cc: @ukiras123
                    `;

                    const assignees = ['ukiras123'];

                    const { data: issues } = await github.rest.issues.listForRepo({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      state: 'open',
                      labels: 'auto-merge,conflict',
                    });

                    const existing = issues.find(issue => issue.title === title);

                    if (!existing) {
                      await github.rest.issues.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title,
                        body,
                        labels: ['auto-merge', 'conflict'],
                        assignees,
                      });
                    }
